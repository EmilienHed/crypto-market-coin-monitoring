{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@ionic/angular\";\nfunction StatsPage_ion_card_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-card\")(1, \"ion-card-header\")(2, \"ion-card-title\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"ion-card-content\")(5, \"ion-list\")(6, \"ion-item\")(7, \"ion-label\");\n    i0.ɵɵtext(8, \"Symbol\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"ion-note\", 2);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"ion-item\")(12, \"ion-label\");\n    i0.ɵɵtext(13, \"Current Price\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"ion-note\", 2);\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"ion-item\")(17, \"ion-label\");\n    i0.ɵɵtext(18, \"Market Cap\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"ion-note\", 2);\n    i0.ɵɵtext(20);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(21, \"ion-item\")(22, \"ion-label\");\n    i0.ɵɵtext(23, \"24h Volume\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"ion-note\", 2);\n    i0.ɵɵtext(25);\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r0.cryptoData.name);\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(ctx_r0.cryptoData.symbol);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r0.cryptoData.market_data.current_price.usd);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r0.cryptoData.market_data.market_cap.usd);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r0.cryptoData.market_data.total_volume.usd);\n  }\n}\nclass StatsPage {\n  constructor(route, http) {\n    this.route = route;\n    this.http = http;\n    this.cryptoId = null;\n  }\n  ngOnInit() {\n    this.cryptoId = this.route.snapshot.paramMap.get('id');\n    if (this.cryptoId) {\n      this.getCryptoData();\n    }\n  }\n  getCryptoData() {\n    const url = `https://api.coingecko.com/api/v3/coins/${this.cryptoId}`;\n    this.http.get(url).subscribe(data => {\n      this.cryptoData = data;\n      console.log(this.cryptoData); // Vérifier les données dans la console\n    });\n  }\n\n  showChart() {\n    const chartData = {\n      labels: [],\n      datasets: [{\n        label: 'Cours du coin',\n        data: [],\n        borderColor: 'blue',\n        fill: false\n      }]\n    };\n    this.coingeckoService.getCoinPriceHistory(this.selectedCoin.id).subscribe(prices => {\n      prices.forEach(price => {\n        const date = new Date(price[0]);\n        chartData.labels.push(date.toLocaleDateString());\n        chartData.datasets[0].data.push(price[1]);\n      });\n      console.log(chartData);\n      moment.locale('fr');\n      Chart.register(...registerables); // Enregistrer tous les modules nécessaires\n      chartData.datasets[0].borderColor = 'lightblue';\n      // Création du graphique\n      this.chart = new Chart(this.chartCanvas.nativeElement, {\n        type: 'line',\n        data: chartData,\n        options: {\n          responsive: true,\n          scales: {\n            x: {\n              min: '2023-01-01 00:00:00',\n              type: 'time',\n              display: true,\n              title: {\n                display: true,\n                text: 'Date'\n              }\n            },\n            y: {\n              display: true,\n              title: {\n                display: true,\n                text: 'Prix'\n              }\n            }\n          }\n        }\n      });\n    });\n  }\n}\nStatsPage.ɵfac = function StatsPage_Factory(t) {\n  return new (t || StatsPage)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.HttpClient));\n};\nStatsPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: StatsPage,\n  selectors: [[\"app-stats\"]],\n  decls: 8,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [\"chartCanvas\", \"\"], [\"slot\", \"end\"]],\n  template: function StatsPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\");\n      i0.ɵɵtext(3, \"Stats\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(4, \"ion-content\");\n      i0.ɵɵtemplate(5, StatsPage_ion_card_5_Template, 26, 5, \"ion-card\", 0);\n      i0.ɵɵelement(6, \"canvas\", null, 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.cryptoData);\n    }\n  },\n  dependencies: [i3.NgIf, i4.IonCard, i4.IonCardContent, i4.IonCardHeader, i4.IonCardTitle, i4.IonContent, i4.IonHeader, i4.IonItem, i4.IonLabel, i4.IonList, i4.IonNote, i4.IonTitle, i4.IonToolbar],\n  styles: [\"ion-content[_ngcontent-%COMP%] {\\n  background-color: #fff;\\n  padding: 20px;\\n}\\n\\n.stats-title[_ngcontent-%COMP%] {\\n  font-size: 24px;\\n  font-weight: bold;\\n  margin-bottom: 10px;\\n}\\n\\n.stats-info[_ngcontent-%COMP%] {\\n  font-size: 16px;\\n  color: #888;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGFiMS9zdGF0cy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQUE7QUFFQTtFQUNFLHNCQUFBO0VBQ0EsYUFBQTtBQUFGOztBQUdBO0VBQ0UsZUFBQTtFQUNBLGlCQUFBO0VBQ0EsbUJBQUE7QUFBRjs7QUFHQTtFQUNFLGVBQUE7RUFDQSxXQUFBO0FBQUYiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBzdGF0cy5wYWdlLnNjc3MgKi9cblxuaW9uLWNvbnRlbnQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBwYWRkaW5nOiAyMHB4O1xufVxuXG4uc3RhdHMtdGl0bGUge1xuICBmb250LXNpemU6IDI0cHg7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xufVxuXG4uc3RhdHMtaW5mbyB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgY29sb3I6ICM4ODg7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});\nexport { StatsPage };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","cryptoData","name","symbol","market_data","current_price","usd","market_cap","total_volume","StatsPage","constructor","route","http","cryptoId","ngOnInit","snapshot","paramMap","get","getCryptoData","url","subscribe","data","console","log","showChart","chartData","labels","datasets","label","borderColor","fill","coingeckoService","getCoinPriceHistory","selectedCoin","id","prices","forEach","price","date","Date","push","toLocaleDateString","moment","locale","Chart","register","registerables","chart","chartCanvas","nativeElement","type","options","responsive","scales","x","min","display","title","text","y","ɵɵdirectiveInject","i1","ActivatedRoute","i2","HttpClient","selectors","decls","vars","consts","template","StatsPage_Template","rf","ctx","ɵɵtemplate","StatsPage_ion_card_5_Template","ɵɵelement","ɵɵproperty"],"sources":["C:\\Users\\e.hedin\\nono\\src\\app\\tab1\\stats.page.ts","C:\\Users\\e.hedin\\nono\\src\\app\\tab1\\stats.page.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-stats',\n  templateUrl: './stats.page.html',\n  styleUrls: ['./stats.page.scss'],\n})\nexport class StatsPage implements OnInit {\n  cryptoId: string | null = null;\n  cryptoData: any;\n\n  constructor(private route: ActivatedRoute, private http: HttpClient) {}\n\n  ngOnInit() {\n    this.cryptoId = this.route.snapshot.paramMap.get('id');\n    if (this.cryptoId) {\n      this.getCryptoData();\n    }\n  }\n\n  getCryptoData() {\n    const url = `https://api.coingecko.com/api/v3/coins/${this.cryptoId}`;\n    this.http.get(url).subscribe((data) => {\n      this.cryptoData = data;\n      console.log(this.cryptoData); // Vérifier les données dans la console\n    });\n  }\n  showChart() {\n    const chartData: { labels: string[], datasets: { label: string, data: number[], borderColor: string, fill: boolean }[] } = {\n      labels: [],\n      datasets: [{\n        label: 'Cours du coin',\n        data: [],\n        borderColor: 'blue',\n        fill: false\n      }]\n    };\n\n    this.coingeckoService.getCoinPriceHistory(this.selectedCoin.id).subscribe((prices: any[]) => {\n      prices.forEach(price => {\n        const date = new Date(price[0]);\n        chartData.labels.push(date.toLocaleDateString());\n        chartData.datasets[0].data.push(price[1]);\n      });\n      console.log(chartData);\n\n      moment.locale('fr');\n      Chart.register(...registerables); // Enregistrer tous les modules nécessaires\n\n      chartData.datasets[0].borderColor = 'lightblue';\n      // Création du graphique\n      this.chart = new Chart(this.chartCanvas.nativeElement as any, {\n        type: 'line',\n        data: chartData,\n        options: {\n          responsive: true,\n          scales: {\n            x: {\n              min: '2023-01-01 00:00:00',\n              type: 'time',\n              display: true,\n              title: {\n                display: true,\n                text: 'Date'\n              }\n            },\n            y: {\n              display: true,\n              title: {\n                display: true,\n                text: 'Prix'\n              }\n            }\n          }\n        }\n      });\n    });\n  }\n}\n\n","<ion-header>\n  <ion-toolbar>\n    <ion-title>Stats</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ion-card *ngIf=\"cryptoData\">\n    <ion-card-header>\n      <ion-card-title>{{ cryptoData.name }}</ion-card-title>\n    </ion-card-header>\n    <ion-card-content>\n      <ion-list>\n        <ion-item>\n          <ion-label>Symbol</ion-label>\n          <ion-note slot=\"end\">{{ cryptoData.symbol }}</ion-note>\n        </ion-item>\n        <ion-item>\n          <ion-label>Current Price</ion-label>\n          <ion-note slot=\"end\">{{ cryptoData.market_data.current_price.usd }}</ion-note>\n        </ion-item>\n        <ion-item>\n          <ion-label>Market Cap</ion-label>\n          <ion-note slot=\"end\">{{ cryptoData.market_data.market_cap.usd }}</ion-note>\n        </ion-item>\n        <ion-item>\n          <ion-label>24h Volume</ion-label>\n          <ion-note slot=\"end\">{{ cryptoData.market_data.total_volume.usd }}</ion-note>\n        </ion-item>\n      </ion-list>\n    </ion-card-content>\n  </ion-card>  <canvas #chartCanvas></canvas>\n</ion-content>\n"],"mappings":";;;;;;;ICOEA,EAAA,CAAAC,cAAA,eAA6B;IAETD,EAAA,CAAAE,MAAA,GAAqB;IAAAF,EAAA,CAAAG,YAAA,EAAiB;IAExDH,EAAA,CAAAC,cAAA,uBAAkB;IAGDD,EAAA,CAAAE,MAAA,aAAM;IAAAF,EAAA,CAAAG,YAAA,EAAY;IAC7BH,EAAA,CAAAC,cAAA,kBAAqB;IAAAD,EAAA,CAAAE,MAAA,IAAuB;IAAAF,EAAA,CAAAG,YAAA,EAAW;IAEzDH,EAAA,CAAAC,cAAA,gBAAU;IACGD,EAAA,CAAAE,MAAA,qBAAa;IAAAF,EAAA,CAAAG,YAAA,EAAY;IACpCH,EAAA,CAAAC,cAAA,mBAAqB;IAAAD,EAAA,CAAAE,MAAA,IAA8C;IAAAF,EAAA,CAAAG,YAAA,EAAW;IAEhFH,EAAA,CAAAC,cAAA,gBAAU;IACGD,EAAA,CAAAE,MAAA,kBAAU;IAAAF,EAAA,CAAAG,YAAA,EAAY;IACjCH,EAAA,CAAAC,cAAA,mBAAqB;IAAAD,EAAA,CAAAE,MAAA,IAA2C;IAAAF,EAAA,CAAAG,YAAA,EAAW;IAE7EH,EAAA,CAAAC,cAAA,gBAAU;IACGD,EAAA,CAAAE,MAAA,kBAAU;IAAAF,EAAA,CAAAG,YAAA,EAAY;IACjCH,EAAA,CAAAC,cAAA,mBAAqB;IAAAD,EAAA,CAAAE,MAAA,IAA6C;IAAAF,EAAA,CAAAG,YAAA,EAAW;;;;IAlBjEH,EAAA,CAAAI,SAAA,GAAqB;IAArBJ,EAAA,CAAAK,iBAAA,CAAAC,MAAA,CAAAC,UAAA,CAAAC,IAAA,CAAqB;IAMZR,EAAA,CAAAI,SAAA,GAAuB;IAAvBJ,EAAA,CAAAK,iBAAA,CAAAC,MAAA,CAAAC,UAAA,CAAAE,MAAA,CAAuB;IAIvBT,EAAA,CAAAI,SAAA,GAA8C;IAA9CJ,EAAA,CAAAK,iBAAA,CAAAC,MAAA,CAAAC,UAAA,CAAAG,WAAA,CAAAC,aAAA,CAAAC,GAAA,CAA8C;IAI9CZ,EAAA,CAAAI,SAAA,GAA2C;IAA3CJ,EAAA,CAAAK,iBAAA,CAAAC,MAAA,CAAAC,UAAA,CAAAG,WAAA,CAAAG,UAAA,CAAAD,GAAA,CAA2C;IAI3CZ,EAAA,CAAAI,SAAA,GAA6C;IAA7CJ,EAAA,CAAAK,iBAAA,CAAAC,MAAA,CAAAC,UAAA,CAAAG,WAAA,CAAAI,YAAA,CAAAF,GAAA,CAA6C;;;ADvB5E,MAKaG,SAAS;EAIpBC,YAAoBC,KAAqB,EAAUC,IAAgB;IAA/C,KAAAD,KAAK,GAALA,KAAK;IAA0B,KAAAC,IAAI,GAAJA,IAAI;IAHvD,KAAAC,QAAQ,GAAkB,IAAI;EAGwC;EAEtEC,QAAQA,CAAA;IACN,IAAI,CAACD,QAAQ,GAAG,IAAI,CAACF,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IACtD,IAAI,IAAI,CAACJ,QAAQ,EAAE;MACjB,IAAI,CAACK,aAAa,EAAE;;EAExB;EAEAA,aAAaA,CAAA;IACX,MAAMC,GAAG,GAAG,0CAA0C,IAAI,CAACN,QAAQ,EAAE;IACrE,IAAI,CAACD,IAAI,CAACK,GAAG,CAACE,GAAG,CAAC,CAACC,SAAS,CAAEC,IAAI,IAAI;MACpC,IAAI,CAACpB,UAAU,GAAGoB,IAAI;MACtBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACtB,UAAU,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC;EACJ;;EACAuB,SAASA,CAAA;IACP,MAAMC,SAAS,GAA4G;MACzHC,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE,CAAC;QACTC,KAAK,EAAE,eAAe;QACtBP,IAAI,EAAE,EAAE;QACRQ,WAAW,EAAE,MAAM;QACnBC,IAAI,EAAE;OACP;KACF;IAED,IAAI,CAACC,gBAAgB,CAACC,mBAAmB,CAAC,IAAI,CAACC,YAAY,CAACC,EAAE,CAAC,CAACd,SAAS,CAAEe,MAAa,IAAI;MAC1FA,MAAM,CAACC,OAAO,CAACC,KAAK,IAAG;QACrB,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,KAAK,CAAC,CAAC,CAAC,CAAC;QAC/BZ,SAAS,CAACC,MAAM,CAACc,IAAI,CAACF,IAAI,CAACG,kBAAkB,EAAE,CAAC;QAChDhB,SAAS,CAACE,QAAQ,CAAC,CAAC,CAAC,CAACN,IAAI,CAACmB,IAAI,CAACH,KAAK,CAAC,CAAC,CAAC,CAAC;MAC3C,CAAC,CAAC;MACFf,OAAO,CAACC,GAAG,CAACE,SAAS,CAAC;MAEtBiB,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;MACnBC,KAAK,CAACC,QAAQ,CAAC,GAAGC,aAAa,CAAC,CAAC,CAAC;MAElCrB,SAAS,CAACE,QAAQ,CAAC,CAAC,CAAC,CAACE,WAAW,GAAG,WAAW;MAC/C;MACA,IAAI,CAACkB,KAAK,GAAG,IAAIH,KAAK,CAAC,IAAI,CAACI,WAAW,CAACC,aAAoB,EAAE;QAC5DC,IAAI,EAAE,MAAM;QACZ7B,IAAI,EAAEI,SAAS;QACf0B,OAAO,EAAE;UACPC,UAAU,EAAE,IAAI;UAChBC,MAAM,EAAE;YACNC,CAAC,EAAE;cACDC,GAAG,EAAE,qBAAqB;cAC1BL,IAAI,EAAE,MAAM;cACZM,OAAO,EAAE,IAAI;cACbC,KAAK,EAAE;gBACLD,OAAO,EAAE,IAAI;gBACbE,IAAI,EAAE;;aAET;YACDC,CAAC,EAAE;cACDH,OAAO,EAAE,IAAI;cACbC,KAAK,EAAE;gBACLD,OAAO,EAAE,IAAI;gBACbE,IAAI,EAAE;;;;;OAKf,CAAC;IACJ,CAAC,CAAC;EACJ;;AAtEWjD,SAAS,C;mBAATA,SAAS,EAAAf,EAAA,CAAAkE,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAApE,EAAA,CAAAkE,iBAAA,CAAAG,EAAA,CAAAC,UAAA;AAAA;AAATvD,SAAS,C;QAATA,SAAS;EAAAwD,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,mBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCTtB7E,EAAA,CAAAC,cAAA,iBAAY;MAEGD,EAAA,CAAAE,MAAA,YAAK;MAAAF,EAAA,CAAAG,YAAA,EAAY;MAIhCH,EAAA,CAAAC,cAAA,kBAAa;MACXD,EAAA,CAAA+E,UAAA,IAAAC,6BAAA,uBAwBW;MAAEhF,EAAA,CAAAiF,SAAA,sBAA8B;MAC7CjF,EAAA,CAAAG,YAAA,EAAc;;;MAzBDH,EAAA,CAAAI,SAAA,GAAgB;MAAhBJ,EAAA,CAAAkF,UAAA,SAAAJ,GAAA,CAAAvE,UAAA,CAAgB;;;;;;SDEhBQ,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}