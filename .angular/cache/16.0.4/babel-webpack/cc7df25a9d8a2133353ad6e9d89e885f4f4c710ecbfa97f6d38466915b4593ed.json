{"ast":null,"code":"import { Chart, registerables } from 'chart.js';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../coingecko.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@ionic/angular\";\nfunction StatsPage_ion_card_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-card\")(1, \"ion-card-header\")(2, \"ion-card-title\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"ion-card-content\")(5, \"ion-list\")(6, \"ion-item\")(7, \"ion-label\");\n    i0.ɵɵtext(8, \"Image\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"ion-note\", 2);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"ion-item\")(12, \"ion-label\");\n    i0.ɵɵtext(13, \"Symbol\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"ion-note\", 2);\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"ion-item\")(17, \"ion-label\");\n    i0.ɵɵtext(18, \"Current Price\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"ion-note\", 2);\n    i0.ɵɵtext(20);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(21, \"ion-item\")(22, \"ion-label\");\n    i0.ɵɵtext(23, \"Market Cap\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"ion-note\", 2);\n    i0.ɵɵtext(25);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(26, \"ion-item\")(27, \"ion-label\");\n    i0.ɵɵtext(28, \"24h Volume\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"ion-note\", 2);\n    i0.ɵɵtext(30);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelement(31, \"canvas\", 3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r0.crypto.name);\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(ctx_r0.image.large.symbol);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r0.crypto.symbol);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r0.crypto.market_data.current_price.usd);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r0.crypto.market_data.market_cap.usd);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r0.crypto.market_data.total_volume.usd);\n  }\n}\nclass StatsPage {\n  constructor(route, coingeckoService) {\n    this.route = route;\n    this.coingeckoService = coingeckoService;\n    this.cryptoId = null;\n  }\n  ngOnInit() {\n    this.cryptoId = this.route.snapshot.paramMap.get('id') || null;\n    if (this.cryptoId) {\n      this.coingeckoService.getCoinDetails(this.cryptoId).subscribe(data => {\n        this.crypto = data;\n        this.showChart();\n      });\n    }\n  }\n  showChart() {\n    const chartData = {\n      labels: [],\n      datasets: [{\n        label: 'Cours du coin',\n        data: [],\n        borderColor: 'blue',\n        fill: false\n      }]\n    };\n    this.coingeckoService.getCoinPriceHistory(this.cryptoId).subscribe(prices => {\n      prices.forEach(price => {\n        const date = new Date(price[0]);\n        chartData.labels.push(date.toLocaleDateString());\n        chartData.datasets[0].data.push(price[1]);\n      });\n      Chart.register(...registerables);\n      chartData.datasets[0].borderColor = 'lightblue';\n      this.chart = new Chart('cryptoChart', {\n        type: 'line',\n        data: chartData,\n        options: {\n          responsive: true,\n          scales: {\n            x: {\n              min: '2023-01-01 00:00:00',\n              type: 'time',\n              display: true,\n              title: {\n                display: true,\n                text: 'Date'\n              }\n            },\n            y: {\n              display: true,\n              title: {\n                display: true,\n                text: 'Price'\n              }\n            }\n          }\n        }\n      });\n    });\n  }\n}\nStatsPage.ɵfac = function StatsPage_Factory(t) {\n  return new (t || StatsPage)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.CoingeckoService));\n};\nStatsPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: StatsPage,\n  selectors: [[\"app-stats\"]],\n  decls: 6,\n  vars: 1,\n  consts: [[1, \"chart-container\"], [4, \"ngIf\"], [\"slot\", \"end\"], [\"id\", \"cryptoChart\", \"width\", \"400\", \"height\", \"200\"]],\n  template: function StatsPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\");\n      i0.ɵɵtext(3, \"Stats\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(4, \"ion-content\", 0);\n      i0.ɵɵtemplate(5, StatsPage_ion_card_5_Template, 32, 6, \"ion-card\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.crypto);\n    }\n  },\n  dependencies: [i3.NgIf, i4.IonCard, i4.IonCardContent, i4.IonCardHeader, i4.IonCardTitle, i4.IonContent, i4.IonHeader, i4.IonItem, i4.IonLabel, i4.IonList, i4.IonNote, i4.IonTitle, i4.IonToolbar],\n  styles: [\"ion-content[_ngcontent-%COMP%] {\\n  background-color: #fff;\\n  padding: 20px;\\n}\\n\\n.stats-title[_ngcontent-%COMP%] {\\n  font-size: 24px;\\n  font-weight: bold;\\n  margin-bottom: 10px;\\n}\\n\\n.stats-info[_ngcontent-%COMP%] {\\n  font-size: 16px;\\n  color: #888;\\n}\\n\\n#cryptoChart[_ngcontent-%COMP%] {\\n  flex-grow: 1;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGFiMS9zdGF0cy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQUE7QUFFQTtFQUNFLHNCQUFBO0VBQ0EsYUFBQTtBQUFGOztBQUdBO0VBQ0UsZUFBQTtFQUNBLGlCQUFBO0VBQ0EsbUJBQUE7QUFBRjs7QUFHQTtFQUNFLGVBQUE7RUFDQSxXQUFBO0FBQUY7O0FBR0E7RUFDRSxZQUFBO0FBQUYiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBzdGF0cy5wYWdlLnNjc3MgKi9cblxuaW9uLWNvbnRlbnQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBwYWRkaW5nOiAyMHB4O1xufVxuXG4uc3RhdHMtdGl0bGUge1xuICBmb250LXNpemU6IDI0cHg7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xufVxuXG4uc3RhdHMtaW5mbyB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgY29sb3I6ICM4ODg7XG59XG5cbiNjcnlwdG9DaGFydCB7XG4gIGZsZXgtZ3JvdzogMTtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});\nexport { StatsPage };","map":{"version":3,"names":["Chart","registerables","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","crypto","name","image","large","symbol","market_data","current_price","usd","market_cap","total_volume","StatsPage","constructor","route","coingeckoService","cryptoId","ngOnInit","snapshot","paramMap","get","getCoinDetails","subscribe","data","showChart","chartData","labels","datasets","label","borderColor","fill","getCoinPriceHistory","prices","forEach","price","date","Date","push","toLocaleDateString","register","chart","type","options","responsive","scales","x","min","display","title","text","y","ɵɵdirectiveInject","i1","ActivatedRoute","i2","CoingeckoService","selectors","decls","vars","consts","template","StatsPage_Template","rf","ctx","ɵɵtemplate","StatsPage_ion_card_5_Template","ɵɵproperty"],"sources":["C:\\Users\\e.hedin\\nono\\src\\app\\tab1\\stats.page.ts","C:\\Users\\e.hedin\\nono\\src\\app\\tab1\\stats.page.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CoingeckoService } from '../coingecko.service';\nimport { Chart, registerables } from 'chart.js';\n\n@Component({\n  selector: 'app-stats',\n  templateUrl: './stats.page.html',\n  styleUrls: ['./stats.page.scss'],\n})\nexport class StatsPage implements OnInit {\n  cryptoId: string | null = null;\n  crypto: any;\n  chart!: Chart;\n\n  constructor(private route: ActivatedRoute, private coingeckoService: CoingeckoService) {}\n\n  ngOnInit() {\n    this.cryptoId = this.route.snapshot.paramMap.get('id') || null;\n    if (this.cryptoId) {\n      this.coingeckoService.getCoinDetails(this.cryptoId).subscribe((data) => {\n        this.crypto = data;\n        this.showChart();\n      });\n    }\n  }\n\n  showChart() {\n    const chartData: { labels: string[], datasets: { label: string, data: number[], borderColor: string, fill: boolean }[] } = {\n      labels: [],\n      datasets: [{\n        label: 'Cours du coin',\n        data: [],\n        borderColor: 'blue',\n        fill: false\n      }]\n    };\n\n    this.coingeckoService.getCoinPriceHistory(this.cryptoId!).subscribe((prices: any[]) => {\n      prices.forEach(price => {\n        const date = new Date(price[0]);\n        chartData.labels.push(date.toLocaleDateString());\n        chartData.datasets[0].data.push(price[1]);\n      });\n\n      Chart.register(...registerables);\n\n      chartData.datasets[0].borderColor = 'lightblue';\n      this.chart = new Chart('cryptoChart', {\n        type: 'line',\n        data: chartData,\n        options: {\n          responsive: true,\n          scales: {\n            x: {\n              min: '2023-01-01 00:00:00',\n              type: 'time',\n              display: true,\n              title: {\n                display: true,\n                text: 'Date'\n              }\n            },\n            y: {\n              display: true,\n              title: {\n                display: true,\n                text: 'Price'\n              }\n            }\n          }\n        }\n      });\n    });\n  }\n}\n","<ion-header>\n  <ion-toolbar>\n    <ion-title>Stats</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"chart-container\">\n  <ion-card *ngIf=\"crypto\">\n    <ion-card-header>\n      <ion-card-title>{{ crypto.name }}</ion-card-title>\n    </ion-card-header>\n    <ion-card-content>\n      <ion-list>\n        <ion-item>\n          <ion-label>Image</ion-label>\n          <ion-note slot=\"end\">{{ image.large.symbol }}</ion-note>\n        </ion-item>\n        <ion-item>\n          <ion-label>Symbol</ion-label>\n          <ion-note slot=\"end\">{{ crypto.symbol }}</ion-note>\n        </ion-item>\n        <ion-item>\n          <ion-label>Current Price</ion-label>\n          <ion-note slot=\"end\">{{ crypto.market_data.current_price.usd }}</ion-note>\n        </ion-item>\n        <ion-item>\n          <ion-label>Market Cap</ion-label>\n          <ion-note slot=\"end\">{{ crypto.market_data.market_cap.usd }}</ion-note>\n        </ion-item>\n        <ion-item>\n          <ion-label>24h Volume</ion-label>\n          <ion-note slot=\"end\">{{ crypto.market_data.total_volume.usd }}</ion-note>\n        </ion-item>\n      </ion-list>\n      <canvas id=\"cryptoChart\" width=\"400\" height=\"200\"></canvas>\n    </ion-card-content>\n  </ion-card>\n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}